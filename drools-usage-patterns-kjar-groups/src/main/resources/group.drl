package com.rhc.drools.example

import com.rhc.drools.example.persistence.Person;
import com.rhc.drools.example.persistence.Team;
import com.rhc.drools.example.persistence.Name;
import com.rhc.drools.example.persistence.Problem;
import com.rhc.drools.example.persistence.TeamEvaluation;
import java.math.BigDecimal;


rule "check person myName"
    agenda-group "properties"
    when
        $team : Team($ppl : members)
        $sam : Person(name.firstName == "Sam" && age != 25) from $ppl
    then
        System.out.println("Member evaluated: "+ $sam.getName().toString());
        System.out.println("   On Team: "+ $team.getTeamName());
        $sam.setAge(25);
        $team.addProblem(new Problem("Sam wasn't the right age", "scrubbed"));
end

rule "team budget matches sum of donations"
    agenda-group "properties"
    when
        $team: Team($ppl : members)
        $num : Number(doubleValue - $team.getBudget().doubleValue() > .005) from accumulate(
            Person($donation : donation) from $ppl,
            sum($donation)
        )
    then
        System.out.println("Team evaluated: " + $team.getTeamName());
        System.out.println("  with reported budget: $" + $team.getBudget());
        System.out.println("  with actual budget: $" + $num.toString());
        $team.addProblem(new Problem("The donations don't add up to the budget", "rejected"));
end

rule "Property evaluation complete"
    salience -100
    agenda-group "properties"
    when
        Team()
    then
        System.out.println("Property evaluation complete. Moving on to Comprehensive evaluation.");
        kcontext.getKieRuntime().getAgenda().getAgendaGroup("whole").setFocus();
end

rule "Evaluate team with rejections"
    agenda-group "whole"
    when
        $team : Team(evaluation.status == "Unevaluated Submitted", $pbls: problems)
        Problem(status == "rejected") from $pbls
    then
        $team.setEvaluation("Finalized - Rejected");
        System.out.println("Team final evaluation: " + $team.getTeamName());
        System.out.println("  with status: " + $team.getEvaluation());
end

rule "Evaluate team with scrubs"
    agenda-group "whole"
    when
        $team : Team(evaluation.status == "Unevaluated Submitted", $problems : problems)
        not (Problem(status == "rejected") from $problems)
        Problem(status == "scrubbed") from $problems
    then
        $team.setEvaluation("Finalized - Scrubbed");
        System.out.println("Team final evaluation: " + $team.getTeamName());
        System.out.println("  with status: " + $team.getEvaluation());
end

rule "Evaluate team with no rejections or scrubs"
    agenda-group "whole"
    when
        $team : Team(evaluation.status == "Unevaluated Submitted", $problems : problems)
        not (Problem(status == "rejected") from $problems)
        not (Problem(status == "scrubbed") from $problems)
    then
        $team.setEvaluation("Finalized - Complete");
        System.out.println("Team final evaluation: " + $team.getTeamName());
        System.out.println("  with status: " + $team.getEvaluation());
end
